----------------------------------------------------------------------------------------------------------
---------------------------------------------- TiDB 单机安装 ----------------------------------------------
----------------------------------------------------------------------------------------------------------

1. 首先下载 tar.gz PD, TiKV, TiDB 3个文件, 本人下载了一个 组合版本的 安装包!
    wget https://download.pingcap.org/tidb-latest-linux-amd64.tar.gz

2. 解压缩
    tar -zxvf tidb-latest-linux-amd64.tar.gz

3. 创建 tidb 启动相关的文件夹, 编写相关的 启动脚本
    mkdir -p /data/pd
    mkdir -p /data/tikv

    编写脚本放在 /home/tidb-v5.0.1-linux-amd64 目录下:
    pd.sh
    tikv.sh
    tidb.sh

    脚本内容如下:
        # 1 启动 PD 脚本
        ./bin/pd-server \
          --name=pd \
          --data-dir=/data/pd \
          --client-urls="http://127.0.0.1:2379" \
          --peer-urls="http://127.0.0.1:2380" \
          --initial-cluster="pd=http://127.0.0.1:2380" &
        # 2 启动 TiKV 脚本
        nohup ./bin/tikv-server \
          --pd-endpoints="127.0.0.1:2379" \
          --addr="127.0.0.1:20160" \
          --data-dir=/data/tikv

        # 3 启动 TiDB 脚本
        nohup ./bin/tidb-server \
          --store=tikv \
          --path="127.0.0.1:2379"

4. 启动 TiDB 启动顺序为 PD -> TiKV -> TiDB
    cd /home/tidb-v5.0.1-linux-amd64
    sh pd-server.sh
    sh tikv-server.sh
    sh tidb-server.sh

默认监听端口：4000

验证端口和进程:
ps -ef | grep pd-server
查看端口:
ss -lntp | grep 2379






------------------------------------------------- TiDB 理论知识 ----------------------------------------------
🟢 1️⃣ TiDB Server (SQL 层)
    ✅ 它是什么：
    无状态 SQL Server
    提供 MySQL 协议（所以你可以用 mysql 命令连接）

    ✅ 它干什么：
    接收客户端的 SQL
    解析 SQL 语法
    生成执行计划
    把请求拆分成 Key-Value 操作
    下发到 TiKV
    汇总结果返回给客户端

    ✅ 你可以简单理解：
    TiDB = “SQL网关 + 分布式执行器”

🟢 2️⃣ TiKV Server (存储层)
    ✅ 它是什么：
    分布式事务性 Key-Value 存储
    真正的数据都存在 TiKV

    ✅ 它干什么：
    保存所有数据（行数据 / 索引）
    提供分布式事务 ACID
    把数据自动分片为 Region
    负责副本同步（Raft）

    ✅ 简单理解：
    TiKV = “分布式数据库里的分布式存储引擎”

🟢 3️⃣ PD Server (元数据和调度)
    ✅ 它是什么：
    Placement Driver
    管理集群的“中控大脑”

    ✅ 它干什么：
    保存集群元信息（Region 分布、TiKV状态）
    给 TiKV 分配 Region ID、Store ID
    负责数据副本调度（平衡、迁移、Leader切换）
    提供 TSO (Timestamp Oracle) 服务，生成全局递增时间戳（事务用）

    ✅ 简单理解：
    PD = “集群元信息 + 调度中心 + 分布式时间戳服务”

🗂️ 类比：
    如果把 TiDB 集群比作一个大仓库：
    TiDB = 前台收银员： 接单、算账、告诉库房去拣货
    TiKV = 仓库： 真正存货的地方
    PD = 仓库管理员 + 调度中心： 记录库房哪儿有货、指挥搬运工、发放单号

🟢 启动顺序：
    这就是为什么启动要： PD → TiKV → TiDB
    ✅ 因为：
    TiKV 要向 PD 注册
    TiDB 要去找 PD 获取 TiKV列表

📝 总结最简记忆口诀
    ✅ TiDB：接SQL → 解析 → 分发给TiKV
    ✅ TiKV：分布式存储数据
    ✅ PD：管元数据和调度

结构图

                          +--------------------+
                          |     MySQL Client   |
                          +--------------------+
                                    |
                                    v
                          +--------------------+
                          |     TiDB Server    |   (SQL层)
                          |  (SQL解析/执行计划)  |
                          +--------------------+
                                    |
                       +-----------------------------+
                       |       PD Server             |   (元数据&调度)
                       | - Region元信息               |
                       | - TSO分配(全局时间戳)         |
                       | - 副本调度                   |
                       +-----------------------------+
                                    |
                                    |
                +-------------------+-------------------+
                |                                       |
        +--------------------+                +--------------------+
        |     TiKV Server    |                |     TiKV Server    |
        |  (分布式存储节点)    |                |  (分布式存储节点)    |
        +--------------------+                +--------------------+
                |                                       |
        +--------------------+                +--------------------+
        | RocksDB (底层存储)  |                | RocksDB (底层存储)  |
        +--------------------+                +--------------------+

