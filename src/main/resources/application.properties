spring.application.name=springbatch
server.port=8080

# MySQL
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/spring_batch?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=Yang199001
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# -------------------------------------------- \u914D\u7F6E\u4E0D\u540C\u7684\u6570\u636E\u6E90 --------------------------------------------
# Spring Boot \u4F1A\u9ED8\u8BA4\u5148\u7528\u5B83\u521B\u5EFA DataSource \u548C dynamic.datasource \u7684\u914D\u7F6E\u51B2\u7A81\uFF08\u5373\u51FA\u73B0\u591A\u4E2A\u9ED8\u8BA4\u6570\u636E\u6E90\uFF09\u3002 \u4E0A\u9762\u7684\u548C \u8FD9\u91CC\u7684\u53EA\u80FD\u9009\u62E9\u4E00\u4E2A
# \u9ED8\u8BA4\u6570\u636E\u6E90\uFF08old\uFF09
spring.datasource.dynamic.primary=old

# old \u6570\u636E\u6E90\u914D\u7F6E
spring.datasource.dynamic.datasource.old.url=jdbc:mysql://127.0.0.1:3306/spring_batch?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
spring.datasource.dynamic.datasource.old.username=root
spring.datasource.dynamic.datasource.old.password=Yang199001
spring.datasource.dynamic.datasource.old.driver-class-name=com.mysql.cj.jdbc.Driver

# new \u6570\u636E\u6E90\u914D\u7F6E
spring.datasource.dynamic.datasource.new.url=jdbc:mysql://127.0.0.1:3306/mine_new?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
spring.datasource.dynamic.datasource.new.username=root
spring.datasource.dynamic.datasource.new.password=Yang199001
spring.datasource.dynamic.datasource.new.driver-class-name=com.mysql.cj.jdbc.Driver

# tidb \u6570\u636E\u6E90\u914D\u7F6E
spring.datasource.dynamic.datasource.tidb.url=jdbc:mysql://192.168.188.94:4000/tidb_instance?serverTimezone=Asia/Shanghai
spring.datasource.dynamic.datasource.tidb.username=root
spring.datasource.dynamic.datasource.tidb.password=Yang199001
spring.datasource.dynamic.datasource.tidb.driver-class-name=com.mysql.cj.jdbc.Driver


# Spring Batch
spring.sql.init.data-locations=classpath:org/springframework/batch/core/schema-mysql.sql
spring.sql.init.mode=never
spring.batch.job.enabled=true

# MyBatis Plus
mybatis-plus.mapper-locations=classpath*:/mapper/**/*.xml

# \u65E5\u5FD7\u914D\u7F6E
logging.level.org.springframework.batch=DEBUG
logging.level.org.springframework.jdbc.core=DEBUG
logging.level.org.springframework.transaction=DEBUG

## AWS \u8D26\u53F7 secretKey \u53EA\u663E\u793A\u4E00\u6B21, \u8FD9\u4E2A\u4E00\u5B9A\u8981\u590D\u5236\u51FA\u6765, \u5426\u5219\u4E0D\u6210\u529F!
aws.accessKey=YOUR_ACCESS_KEY
aws.secretKey=YOUR_SECRET_KEY
aws.region=us-east-1
aws.senderId=MySender
aws.smsType=Transactional

# \u914D\u7F6E redis cluster \u96C6\u7FA4, TODO \u4EE5\u540E\u53EA\u7528\u8FD9\u79CD\u65B9\u5F0F, \u56E0\u4E3A\u8FD9\u79CD\u65B9\u5F0F redis \u5B98\u65B9\u4E5F\u5728\u7EF4\u62A4!
spring.data.redis.password=root
spring.data.redis.cluster.nodes=192.168.188.83:6179,192.168.188.83:6279,192.168.188.83:6379,192.168.188.83:6479,192.168.188.83:6579,192.168.188.83:6679
spring.data.redis.cluster.max-redirects=3
spring.data.redis.lettuce.pool.max-idle=16
spring.data.redis.lettuce.pool.max-active=16
spring.data.redis.lettuce.pool.min-idle=16

# \u4E0A\u4F20\u6587\u4EF6\u5927\u5C0F\u63A7\u5236
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


# kafka \u96C6\u7FA4\u5730\u5740
spring.kafka.bootstrap-servers=192.168.188.70:9092,192.168.188.71:9092,192.168.188.72:9092

# producer\u914D\u7F6E
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.properties.max.in.flight.requests.per.connection=1
spring.kafka.producer.batch-size=16384
spring.kafka.producer.linger-ms=10
spring.kafka.producer.buffer-memory=33554432

# consumer\u914D\u7F6E
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.max-poll-records=500






