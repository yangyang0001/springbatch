--------------------------------------------------------------------------------------------------------------------
----------------------------------------------------- springbatch 环境搭建 ------------------------------------------
--------------------------------------------------------------------------------------------------------------------
注意 9张 BATCH_* 表!
spring.sql.init.data-locations=classpath:org/springframework/batch/core/schema-mysql.sql

注意事项: 执行每章节中的 job 的时候要 注释掉其他章节的, 因为有重名的 @Bean!
--------------------------------------------------------------------------------------------------------------------
----------------------------------------------------- chapter_01 HelloWorld ----------------------------------------
--------------------------------------------------------------------------------------------------------------------
springbatch3 中必须配置 如何的启动, 才能够启动! 且必须配置 @EnableBatchProcessing, 才能启动或者自己手动 Controller 触发!
    @Bean
    public CommandLineRunner runJob(JobLauncher jobLauncher, Job helloWorldJob) {
        return args -> {
            JobParameters params = new JobParametersBuilder()
                    .addLong("run.id", System.currentTimeMillis()) // 用时间戳保证唯一
                    .toJobParameters();
            jobLauncher.run(helloWorldJob, params);
        };
    }

--------------------------------------------------------------------------------------------------------------------
----------------------------------------------------- chapter_02 Job 的创建和使用 -----------------------------------
--------------------------------------------------------------------------------------------------------------------
参考 chapter_02 中的代码! 3个 step 顺序执行!


--------------------------------------------------------------------------------------------------------------------
----------------------------------------------------- chapter_03 Flow 的创建和使用 -----------------------------------
--------------------------------------------------------------------------------------------------------------------
参考 chapter_03 中的代码! Flow 是 Step 的集合!


--------------------------------------------------------------------------------------------------------------------
----------------------------------------------------- chapter_04 Split 的创建和使用 ----------------------------------
--------------------------------------------------------------------------------------------------------------------
并发执行 Flow 或者 Step 参考代码 chapter_04 中的代码!

--------------------------------------------------------------------------------------------------------------------
----------------------------------------------------- chapter_05 Decider 决策器的创建和使用 ---------------------------
--------------------------------------------------------------------------------------------------------------------
Step1 进入 Step2 的决策, 哪种决策进入 Step3, 这由 Decider 决策器 决定

决策器只决策一次, 类似于 if 条件, 如果想再次判断, 再次进行决策就OK了!

理解 next 是无条件进入, from 是分支判断, 来自 ... 的决定, 有决策器的感觉




























